[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spark-memory"
version = "1.0.0"
description = "Next-generation AI memory system with LRMM (LangGraph + Redis + MCP + Memory) advanced features"
authors = [{name = "Jason", email = "jaesun23@gmail.com"}]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}
keywords = ["memory", "ai", "redis", "mcp", "langgraph", "vector-search", "semantic-search", "graph-analysis"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "redis[hiredis]>=5.0.0",
    "fastmcp>=2.5.1",
    "langgraph>=0.1.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "cryptography>=41.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
]

[project.scripts]
spark-memory = "src.__main__:main"
spark-memory-setup = "src.setup:setup_redis"

[project.urls]
Homepage = "https://github.com/Jaesun23/spark-memory"
Documentation = "https://github.com/Jaesun23/spark-memory/blob/main/README.md"
Repository = "https://github.com/Jaesun23/spark-memory.git"
Issues = "https://github.com/Jaesun23/spark-memory/issues"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
]
analytics = [
    "networkx>=3.0",
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
]
all = [
    "spark-memory[dev,analytics]",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "tests/",
    "test_*.py",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
]
